sample.interval=20000
"getInlineInfo" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "piecewise_interpolate_pulses" 
"any.dots" "checkCall" "cmpCall" "cmp" "cmpPrim1" "h" "tryInline" "cmpCall" "cmp" "cmpPrim1" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallExprFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "piecewise_interpolate_pulses" 
"splice_dfs" "tibble_quos" "tibble" "compute_groups" "grouped_df" "group_by.data.frame" "dplyr::group_by" "dplyr::summarize" "dplyr::summarize" "interpolate_equal_pulses" "dplyr::mutate" ".f" "withCallingHandlers" "with_indexed_errors" "map_" "map" "map_method" "piecewise_interpolate_pulses" 
"file" "readLines" "tools:::.parse_CITATION_file" "utils:::readCitationFile" ".Call" "<Anonymous>" "do.call" "callFun" "<Anonymous>" "get_data" "detect_new" "rstudio$detect" "cli::num_ansi_colors" "has_ansi" ".Call" "list2" "env_bind0" "child_env" "structure" "child_r6lite" "new_quo_deparser" "expr_deparse" "spec_fn" "spec" "lifecycle::signal_stage" "purrr::map_dfr" "interpolate_equal_pulses" "dplyr::mutate" ".f" "withCallingHandlers" "with_indexed_errors" "map_" "map" "map_method" "piecewise_interpolate_pulses" 
"names" ".rlang_purrr_map_mold" "map_lgl" ".rlang_purrr_probe" "discard" "dplyr::bind_rows" "purrr::map_dfr" "interpolate_equal_pulses" "dplyr::mutate" ".f" "withCallingHandlers" "with_indexed_errors" "map_" "map" "map_method" "piecewise_interpolate_pulses" 
"anyDuplicated.default" "anyDuplicated" "[.tbl_df" "[" "compute_groups" "dplyr::grouped_df" "vec_restore.grouped_df" "vec_restore_dispatch" "<Anonymous>" ".External2" "vec_rbind" "dplyr::bind_rows" "purrr::map_dfr" "interpolate_equal_pulses" "dplyr::mutate" ".f" "withCallingHandlers" "with_indexed_errors" "map_" "map" "map_method" "piecewise_interpolate_pulses" 
"env_get" "$.r6lite" "$" "args_deparse" "deparser" "sexp_deparse" "deparser" "method" "lines$deparse" "operand_deparse" "binary_op_deparse" "deparser" "op_deparse" "deparser" "sexp_deparse" "quo_deparse" "expr_deparse" "infix_overflows" "as_label" "quo_as_label" "new_error_context" "poke_error_context" "withCallingHandlers" "mutate_cols" "mutate.data.frame" "dplyr::mutate" ".f" "withCallingHandlers" "with_indexed_errors" "map_" "map" "map_method" "piecewise_interpolate_pulses" 
"as.character" "gsub" "strip_style" "has_overflown" "line_push" "method" "self$push_one" "method" "self$push" "method" "lines$push_sticky" "args_deparse" "deparser" "op_deparse" "deparser" "sexp_deparse" "deparser" "method" "lines$deparse" "operand_deparse" "binary_op_deparse" "deparser" "op_deparse" "deparser" "sexp_deparse" "quo_deparse" "expr_deparse" "infix_overflows" "as_label" "quo_as_label" "new_error_context" "poke_error_context" "withCallingHandlers" "mutate_cols" "mutate.data.frame" "dplyr::mutate" ".f" "withCallingHandlers" "with_indexed_errors" "map_" "map" "map_method" "piecewise_interpolate_pulses" 
"as.character" "FUN" "lapply" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "packageDescription" "withCallingHandlers" "suppressWarnings" "utils::packageVersion" ".rlang_cli_compat" ".rlang_cli_format_fallback" "signal" "compute_groups" "grouped_df" "summarise.grouped_df" "dplyr::summarize" "dplyr::summarize" "interpolate_equal_pulses" "dplyr::mutate" ".f" "withCallingHandlers" "with_indexed_errors" "map_" "map" "map_method" "piecewise_interpolate_pulses" 
"FUN" "lapply" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "packageDescription" "withCallingHandlers" "suppressWarnings" "utils::packageVersion" ".rlang_cli_compat" ".rlang_cli_format_fallback" "signal" "compute_groups" "grouped_df" "summarise.grouped_df" "dplyr::summarize" "interpolate_equal_pulses" "dplyr::mutate" ".f" "withCallingHandlers" "with_indexed_errors" "map_" "map" "map_method" "piecewise_interpolate_pulses" 
"has_length" "check_valid_cols" "check_valid_col" "tibble_quos" "tibble" "compute_groups" "grouped_df" "[.grouped_df" "[" ".f" "withCallingHandlers" "with_indexed_errors" "map_" "map" "purrr::map_dfr" "interpolate_equal_pulses" "dplyr::mutate" ".f" "withCallingHandlers" "with_indexed_errors" "map_" "map" "map_method" "piecewise_interpolate_pulses" 
"list2" "<Anonymous>" "mapply" "map2" "imap" "splice_dfs" "tibble_quos" "tibble" "compute_groups" "dplyr::grouped_df" "vec_restore.grouped_df" "vec_restore_dispatch" "<Anonymous>" ".External2" "vec_rbind" "dplyr::bind_rows" "purrr::map_dfr" "interpolate_equal_pulses" "dplyr::mutate" ".f" "withCallingHandlers" "with_indexed_errors" "map_" "map" "map_method" "piecewise_interpolate_pulses" 
"mapply" "map2" "imap" "splice_dfs" "tibble_quos" "tibble" "compute_groups" "dplyr::grouped_df" "vec_restore.grouped_df" "vec_restore_dispatch" "<Anonymous>" ".External2" "vec_rbind" "dplyr::bind_rows" "purrr::map_dfr" "interpolate_equal_pulses" "dplyr::mutate" ".f" "withCallingHandlers" "with_indexed_errors" "map_" "map" "map_method" "piecewise_interpolate_pulses" 
"==" "detect_new" "rstudio$detect" "cli::num_ansi_colors" "has_ansi" ".Call" "list2" "env_bind0" "child_env" "structure" "child_r6lite" "new_quo_deparser" "expr_deparse" "infix_overflows" "as_label" "quo_as_label" "new_error_context" "poke_error_context" "withCallingHandlers" "mutate_cols" "mutate.data.frame" "dplyr::mutate" ".f" "withCallingHandlers" "with_indexed_errors" "map_" "map" "map_method" "piecewise_interpolate_pulses" 
"gsub" "strip_style" "has_overflown" "line_push" "method" "self$push_one" "method" "lines$push" "deparser" "sexp_deparse" "deparser" "method" "lines$deparse" "args_deparse" "deparser" "op_deparse" "deparser" "sexp_deparse" "deparser" "method" "lines$deparse" "operand_deparse" "binary_op_deparse" "deparser" "op_deparse" "deparser" "sexp_deparse" "quo_deparse" "expr_deparse" "infix_overflows" "as_label" "quo_as_label" "new_error_context" "poke_error_context" "withCallingHandlers" "mutate_cols" "mutate.data.frame" "dplyr::mutate" ".f" "withCallingHandlers" "with_indexed_errors" "map_" "map" "map_method" "piecewise_interpolate_pulses" 
"dplyr_legacy_locale" "dplyr_locate_sorted_groups" "compute_groups" "dplyr::grouped_df" "vec_restore.grouped_df" "vec_restore_dispatch" "<Anonymous>" ".External2" "vec_rbind" "dplyr::bind_rows" "map_method" "piecewise_interpolate_pulses" 
"$<-.data.frame" "$<-" "dplyr_locate_sorted_groups" "compute_groups" "dplyr::grouped_df" "vec_restore.grouped_df" "vec_restore_dispatch" "<Anonymous>" ".External2" "vec_rbind" "dplyr::bind_rows" "map_method" "piecewise_interpolate_pulses" 
"FUN" "lapply" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "packageDescription" "withCallingHandlers" "suppressWarnings" "utils::packageVersion" ".rlang_cli_compat" ".rlang_cli_format_fallback" "signal" "compute_groups" "dplyr::grouped_df" "vec_restore.grouped_df" "vec_restore_dispatch" "<Anonymous>" ".External2" "vec_rbind" "dplyr::bind_rows" "map_method" "piecewise_interpolate_pulses" 
"set_names" "names2" "check_valid_cols" "check_valid_col" "tibble_quos" "tibble" "compute_groups" "dplyr::grouped_df" "vec_restore.grouped_df" "vec_restore_dispatch" "<Anonymous>" ".External2" "vec_rbind" "dplyr::bind_rows" "map_method" "piecewise_interpolate_pulses" 
"paste" "do.call" "strSub" "str.default" "utils::str" "str.tbl_df" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"eval" "%||%" "FUN" "lapply" "glue_data" "glue::glue" "paste0" "cat" "cat_line" "obj_str_recursive" "obj_str_data.default" "obj_str_data" "obj_str" "str.vctrs_vctr" "str" "<Anonymous>" "do.call" "strSub" "str.default" "utils::str" "str.tbl_df" "str" "<Anonymous>" "do.call" "strSub" "str.default" "utils::str" "str.tbl_df" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "...elt" "withVisible" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" ".rs.valueContentsImpl" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" ".rs.describeObject" 
"$" "findCenvVar" "getInlineInfo" "tryInline" "cmpCall" "cmp" "cmpWhileBody" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.stripSurrounding" "parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "quietly" ".rs.getAnywhere" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsFunction" ".rs.getRCompletions" ".rs.appendCompletions" ".rs.rpc.get_completions" 
"lapply" "FUN" "lapply" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsArgument" ".rs.getCompletionsFunction" ".rs.getRCompletions" ".rs.appendCompletions" ".rs.rpc.get_completions" 
"make.codeBuf" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpBuiltinArgs" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsArgument" ".rs.getCompletionsFunction" ".rs.getRCompletions" ".rs.appendCompletions" ".rs.rpc.get_completions" 
"sub" ".rs.doStripSurrounding" ".rs.stripSurrounding" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsArgument" ".rs.getCompletionsFunction" ".rs.getRCompletions" ".rs.appendCompletions" ".rs.rpc.get_completions" 
"findCenvVar" "getInlineInfo" "isBaseVar" "getFoldFun" "constantFoldCall" "constantFold" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getAnywhere" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsArgument" ".rs.getCompletionsFunction" ".rs.getRCompletions" ".rs.appendCompletions" ".rs.rpc.get_completions" 
"make.codeBuf" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.getAnywhere" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.tryCatch" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsArgument" ".rs.getCompletionsFunction" ".rs.getRCompletions" ".rs.appendCompletions" ".rs.rpc.get_completions" 
"constantFold" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "cmpWhileBody" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.matchCall" ".rs.getCompletionsArgument" ".rs.getCompletionsFunction" ".rs.getRCompletions" ".rs.appendCompletions" ".rs.rpc.get_completions" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 
"substring" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" ".rs.rpc.get_completions" 

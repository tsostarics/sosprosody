% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_praatscript.R
\name{run_praatscript}
\alias{run_praatscript}
\title{Run praat script from R}
\usage{
run_praatscript(
  script_path,
  ...,
  use_defaults = FALSE,
  debug = FALSE,
  praat_path = "Praat",
  method = base::system,
  use_gui = FALSE
)
}
\arguments{
\item{script_path}{Path to the script}

\item{...}{\emph{Named} list of arguments to pass to the script. If any character
arguments contain spaces, they will be escaped for you in the \code{system} call.}

\item{use_defaults}{Logical, defaults to \code{FALSE}, whether to use the default
values for the arguments as found in the form. If the form doesn't have
defaults specified, you must provide a value in \code{...}. If \code{use_defaults} is
set to \code{TRUE} and an argument is also specified in \code{...}, the user value will
be used instead.}

\item{debug}{Logical, defaults to \code{FALSE}, if \code{TRUE} the system call will not
be run and the string that would be passed to it is returned instead. If the
command isn't working you can double check that it looks correct with this.}

\item{praat_path}{Path to Praat.exe, defaults to \code{Praat} since I keep a copy
in my project directories.}

\item{method}{Which method to use to run system call, defaults to \code{base::system},
but you could also use \code{base::system2} or \code{I} to return the string itself}

\item{use_gui}{Logical, defaults to \code{FALSE} to run the script from the command
line using \code{--run}. When \code{TRUE}, the script will be run in a new GUI window
using \code{--new-gui}. The script will be copied to a temporary file with
\verb{___temp} appended ot the file name. A new line containing \code{Quit} will be
added to the end of the file. This will close the GUI after the script is
run; the GUI will not close automatically otherwise and will prevent R from
resuming execution. If you want to run a script that creates windows
(e.g., \code{View & Edit}), you must set \code{use_gui = TRUE}.}
}
\value{
The system call specified by \code{method} is run, typically \code{0} if the
command was successful
}
\description{
Praat scripts can be run from the command line with the command
"Praat.exe --run scriptpath.praat arg1 arg2 arg3" etc. where the args
are provided in the order of those that appear in the form at the top
of the script. This function takes an arbitrary number of \emph{\strong{NAMED arguments}}
corresponding to the variable names in the praat script and runs the
command to run it.
}
\details{
Other wrappers like this exist in other packages like \code{speakr}. However,
this version has the benefit of taking the named arguments and ensuring that
they're provided to the script \emph{in the correct order} as determined by the
order in the script's form.

It is important to remember that arguments (such as directories) are
evaluated by Praat relative to the script location. Also, this function
will not check to ensure that the datatype of the provided argument is
compatible with the datatype of the variable in the praatscript, so be
careful. Remember that booleans in praat are \code{1} and \code{0}, but passing \code{TRUE}
or \code{FALSE} here will result in passing the the strings \code{"TRUE"} or \code{"FALSE"}
to the script.

If method is set to \code{system2}, the command will be run using \code{system2}
with \code{stderr} and \code{stdout} both set to \code{TRUE}. The command will be \code{Praat}
and the arguments will be everything following \code{Praat } in the system call.

See https://www.fon.hum.uva.nl/praat/manual/Scripting_6_9__Calling_from_the_command_line.html
for more information on using Praat from the command line.
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adjust_pulses.R
\name{drop_overlapping_pulses}
\alias{drop_overlapping_pulses}
\title{Adjust pulse indices due to junctures}
\usage{
drop_overlapping_pulses(
  pulse_df,
  keep,
  time_by = "timepoint",
  pulse_col = "pulse_i",
  .grouping = "file"
)
}
\arguments{
\item{pulse_df}{Dataframe containing integer pulse indices and numeric
timestamps}

\item{keep}{String, either \code{'left'}, \code{'right'}, or \code{'both'}}

\item{time_by}{String, which column contains the numeric timestamps}

\item{pulse_col}{String, which column contains the integer timestamps}

\item{.grouping}{String, which column should be used to identify unique
groups (eg \code{file} for filenames)}
}
\value{
\code{pulse_df}, but with pulses removed and indices shifted accordingly
}
\description{
When using \code{piecewise_interpolate_pulses}, you will get 2 pulses when two
sections share a boundary (ie ending of section 1 = start of section 2) as
shown in the example:
}
\details{
This isn't an issue if you're plotting/modeling with the timestamp itself,
as these will overlap as needed. However, if you try to plot/model with
the pulse index, you'll have a part of your time series where there is
no change between the adjacent pulses.

This function takes the output of \code{piecewise_interpolate_pulses}, identifies
pulses that share a timestamp, and either keep the first one (\code{left}) or
the second one (\code{right}) as specified by \code{keep}. If you want to retain
both pulses, you can set keep to \code{both}, but note that this will return
the input dataframe unchanged.

Lastly, if any pulses are removed, the indices are shifted accordingly.
Note that this means if you had two sections with 30 pulses each, this
will cause one to be 30 pulses and one to be 29. If you want both to be
30, you should run \code{piecewise_interpolate_pulses} but extract 30 and 31
pulses.
}
\examples{
\dontrun{
Original dataframe (also output if keep = both)
section | timestamp | pulse_i
a       | 0.0       | 1
a       | 1.0       | 2
a       | 2.0       | 3 <--
b       | 2.0       | 4 <--
b       | 3.0       | 5
b       | 4.0       | 6 <--
c       | 4.0       | 7 <--
c       | 5.0       | 8
c       | 6.0       | 9

if keep = left:
section | timestamp | pulse_i
a       | 0.0       | 1
a       | 1.0       | 2
a       | 2.0       | 3 <--
b       | 3.0       | 4
b       | 4.0       | 5 <--
c       | 5.0       | 6
c       | 6.0       | 7

if keep = right:
section | timestamp | pulse_i
a       | 0.0       | 1
a       | 1.0       | 2
b       | 2.0       | 3 <--
b       | 3.0       | 4
c       | 4.0       | 5 <--
c       | 5.0       | 6
c       | 6.0       | 7

#########

int_df <-
  piecewise_interpolate_pulses(tstdf,
                               section_by = "tstsec",
                               pulses_per_section = c("earlier" = 20,
                                                      "later" = 30),
                               time_by = "tsttp",
                               .pitchval = 'tsthz',
                               .grouping = 'tstfile')

adjusted_df_l <- drop_overlapping_pulses(int_df,'l','tsttp','pulse_i',.grouping = 'tstfile')
adjusted_df_r <- drop_overlapping_pulses(int_df,'r','tsttp','pulse_i',.grouping = 'tstfile')
adjusted_df_b <- drop_overlapping_pulses(int_df,'b','tsttp','pulse_i',.grouping = 'tstfile')
}

}
